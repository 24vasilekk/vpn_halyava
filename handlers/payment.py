from telegram import Update
from telegram.ext import ContextTypes
from keyboards import get_payment_keyboard, get_main_keyboard
from services.yookassa_service import YooKassaService
from services.vpn_service import VPNService
from utils.referral import calculate_referral_bonus
from config import SUBSCRIPTION_PRICE, SUBSCRIPTION_DURATION_DAYS

async def payment_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    await query.edit_message_text(
        "üí≥ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏:",
        reply_markup=get_payment_keyboard()
    )

async def pay_yookassa_callback(update: Update, context: ContextTypes.DEFAULT_TYPE, db):
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ –Æ–ö–∞—Å—Å—É
        payment_url, payment_id = YooKassaService.create_payment(user_id, SUBSCRIPTION_PRICE)
        
        if not payment_url:
            await query.edit_message_text(
                "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Æ–ö–∞—Å—Å—ã –≤ .env —Ñ–∞–π–ª–µ.",
                reply_markup=get_main_keyboard()
            )
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–∞—Ç–µ–∂ –≤ –±–∞–∑—É
        db.add_payment(user_id, SUBSCRIPTION_PRICE, payment_id, 'yookassa', 'pending')
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º payment_id –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        context.user_data['pending_payment_id'] = payment_id
        
        await query.edit_message_text(
            f"üí≥ –û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏: {SUBSCRIPTION_PRICE}‚ÇΩ\n\n"
            f"üìÖ –°—Ä–æ–∫: {SUBSCRIPTION_DURATION_DAYS} –¥–Ω–µ–π\n"
            f"üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: –¥–æ 3-—Ö\n\n"
            f"–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n{payment_url}\n\n"
            f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ /check_payment –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.",
            reply_markup=get_main_keyboard()
        )
    except Exception as e:
        print(f"Error in pay_yookassa_callback: {e}")
        await query.edit_message_text(
            f"‚ùå –û—à–∏–±–∫–∞: {str(e)}\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Æ–ö–∞—Å—Å—ã.",
            reply_markup=get_main_keyboard()
        )

async def check_payment_command(update: Update, context: ContextTypes.DEFAULT_TYPE, db):
    user_id = update.effective_user.id
    payment_id = context.user_data.get('pending_payment_id')
    
    if not payment_id:
        await update.message.reply_text(
            "‚ùå –ù–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π.",
            reply_markup=get_main_keyboard()
        )
        return
    
    try:
        is_paid = YooKassaService.check_payment(payment_id)
        
        if is_paid:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–ª—é—á (async —Ñ—É–Ω–∫—Ü–∏—è!)
            vpn_key, user_uuid = await VPNService.generate_vpn_key(user_id, is_trial=False)
            
            if vpn_key and user_uuid:
                # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É
                db.add_subscription(user_id, vpn_key, user_uuid, SUBSCRIPTION_DURATION_DAYS)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
                db.update_payment_status(payment_id, 'paid')
                
                # –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å —Ä–µ—Ñ–µ—Ä–µ—Ä—É
                user_data = db.get_user(user_id)
                if user_data and user_data[2]:  # referrer_id
                    referrer_id = user_data[2]
                    bonus = calculate_referral_bonus(SUBSCRIPTION_PRICE)
                    db.update_balance(referrer_id, bonus)
                
                # –û—á–∏—â–∞–µ–º pending payment
                context.user_data.pop('pending_payment_id', None)
                
                await update.message.reply_text(
                    f"‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!\n\n"
                    f"üéâ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ {SUBSCRIPTION_DURATION_DAYS} –¥–Ω–µ–π!\n\n"
                    f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å VPN' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª—é—á–∞.",
                    reply_markup=get_main_keyboard()
                )
            else:
                await update.message.reply_text(
                    "‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ VPN –∫–ª—é—á–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
                    reply_markup=get_main_keyboard()
                )
        else:
            await update.message.reply_text(
                "‚è≥ –ü–ª–∞—Ç–µ–∂ –µ—â–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                reply_markup=get_main_keyboard()
            )
    except Exception as e:
        print(f"Error in check_payment_command: {e}")
        await update.message.reply_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞: {str(e)}",
            reply_markup=get_main_keyboard()
        )