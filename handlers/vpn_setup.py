import os
from telegram import Update
from telegram.ext import ContextTypes
from keyboards import get_device_keyboard, get_device_options_keyboard, get_main_keyboard
from services.vpn_service import VPNService

async def setup_vpn_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    await query.edit_message_text(
        "üì± –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:",
        reply_markup=get_device_keyboard()
    )

async def device_selection_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    device = query.data.replace('device_', '')
    context.user_data['selected_device'] = device
    
    device_names = {
        'android': 'Android',
        'iphone': 'iPhone',
        'ipad': 'iPad',
        'ipod': 'iPod',
        'mac': 'Mac',
        'windows': 'Windows',
        'other': '–î—Ä—É–≥–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ'
    }
    
    await query.edit_message_text(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {device_names.get(device, '–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ')}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:",
        reply_markup=get_device_options_keyboard()
    )

async def install_app_callback(update: Update, context: ContextTypes.DEFAULT_TYPE, db):
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    device = context.user_data.get('selected_device', 'other')
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª
    _, protocol = db.get_user_preferences(user_id)
    
    download_link = VPNService.get_app_download_link(device, protocol)
    
    app_name = "V2Ray" if protocol == 'v2ray' else "WireGuard"
    
    await query.edit_message_text(
        f"–°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ {app_name}:\n\n{download_link}\n\n"
        f"–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∏ –ø–æ–ª—É—á–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥.",
        reply_markup=get_device_options_keyboard()
    )

async def get_key_callback(update: Update, context: ContextTypes.DEFAULT_TYPE, db):
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    subscription = db.get_active_subscription(user_id)
    
    if not subscription:
        await query.edit_message_text(
            "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.",
            reply_markup=get_main_keyboard()
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    _, protocol = db.get_user_preferences(user_id)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á (–≤—Å–µ–≥–¥–∞ —Å–µ—Ä–≤–µ—Ä 1)
    is_trial = subscription[6]
    vpn_key, user_uuid = await VPNService.generate_vpn_key(user_id, 1, protocol, is_trial)
    
    if not vpn_key:
        await query.edit_message_text(
            "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=get_main_keyboard()
        )
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª—é—á –≤ –ë–î
    db.cursor.execute('''
        UPDATE subscriptions 
        SET vpn_key = ?, user_uuid = ?
        WHERE user_id = ? AND is_active = 1
    ''', (vpn_key, user_uuid, user_id))
    db.connection.commit()
    
    protocol_name = "V2Ray" if protocol == 'v2ray' else "WireGuard"
    
    if protocol == 'v2ray':
        # V2Ray - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏
        await query.message.reply_text(
            f"–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ V2Ray\n\n"
            f"–ü—Ä–æ—Ç–æ–∫–æ–ª: {protocol_name}\n\n"
            f"–°—Å—ã–ª–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:\n{vpn_key}\n\n"
            f"–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ V2Ray",
        )
    else:
        # WireGuard - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
        config_filename = f"wireguard_user_{user_id}.conf"
        
        with open(f"/tmp/{config_filename}", "w") as f:
            f.write(vpn_key)
        
        try:
            with open(f"/tmp/{config_filename}", "rb") as f:
                await context.bot.send_document(
                    chat_id=query.message.chat_id,
                    document=f,
                    filename=config_filename,
                    caption=f"–í–∞—à –∫–æ–Ω—Ñ–∏–≥ WireGuard\n\n"
                           f"–ü—Ä–æ—Ç–æ–∫–æ–ª: {protocol_name}\n\n"
                           f"–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ WireGuard"
                )
            
            os.remove(f"/tmp/{config_filename}")
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")
            await query.message.reply_text(
                f"–í–∞—à –∫–æ–Ω—Ñ–∏–≥:\n\n```\n{vpn_key}\n```",
                parse_mode='Markdown'
            )
    
    await query.edit_message_text(
        "–ö–æ–Ω—Ñ–∏–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!",
        reply_markup=get_main_keyboard()
    )