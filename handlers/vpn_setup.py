from telegram import Update
from telegram.ext import ContextTypes
from keyboards import get_device_keyboard, get_device_options_keyboard, get_main_keyboard
from services.vpn_service import VPNService

async def setup_vpn_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    await query.edit_message_text(
        "üì± –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:",
        reply_markup=get_device_keyboard()
    )

async def device_selection_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    device = query.data.replace('device_', '')
    context.user_data['selected_device'] = device
    
    device_names = {
        'android': 'Android',
        'iphone': 'iPhone',
        'ipad': 'iPad',
        'ipod': 'iPod',
        'mac': 'Mac',
        'windows': 'Windows',
        'other': '–î—Ä—É–≥–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ'
    }
    
    await query.edit_message_text(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {device_names.get(device, '–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ')}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:",
        reply_markup=get_device_options_keyboard()
    )

async def install_app_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    device = context.user_data.get('selected_device', 'other')
    download_link = VPNService.get_app_download_link(device)
    
    await query.edit_message_text(
        f"üì• –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ WireGuard:\n\n{download_link}\n\n–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∏ –ø–æ–ª—É—á–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥.",
        reply_markup=get_device_options_keyboard()
    )

async def get_key_callback(update: Update, context: ContextTypes.DEFAULT_TYPE, db):
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    subscription = db.get_active_subscription(user_id)
    
    if subscription:
        vpn_key = subscription[2]
        config_filename = f"wireguard_user_{user_id}.conf"
        
        with open(f"/tmp/{config_filename}", "w") as f:
            f.write(vpn_key)
        
        try:
            with open(f"/tmp/{config_filename}", "rb") as f:
                await context.bot.send_document(
                    chat_id=query.message.chat_id,
                    document=f,
                    filename=config_filename,
                    caption="üîë –í–∞—à –∫–æ–Ω—Ñ–∏–≥ WireGuard\n\n"
                           "üì± –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ WireGuard"
                )
            
            import os
            os.remove(f"/tmp/{config_filename}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            await query.message.reply_text(
                f"üîë –í–∞—à –∫–æ–Ω—Ñ–∏–≥:\n\n```\n{vpn_key}\n```",
                parse_mode='Markdown'
            )
        
        await query.edit_message_text(
            "‚úÖ –ö–æ–Ω—Ñ–∏–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!",
            reply_markup=get_main_keyboard()
        )
    else:
        await query.edit_message_text(
            "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.",
            reply_markup=get_main_keyboard()
        )
