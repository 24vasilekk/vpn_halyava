from telegram import Update
from telegram.ext import ContextTypes
from keyboards import get_server_selection_keyboard, get_protocol_selection_keyboard, get_device_options_keyboard

async def choose_server_callback(update: Update, context: ContextTypes.DEFAULT_TYPE, db):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞"""
    query = update.callback_query
    await query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    user_id = query.from_user.id
    server, protocol = db.get_user_preferences(user_id)
    
    server_names = {
        1: "üéØ –°–µ—Ä–≤–µ—Ä 1 - TikTok (RU)",
        2: "‚ö° –°–µ—Ä–≤–µ—Ä 2 - –°–∫–æ—Ä–æ—Å—Ç—å (NL)"
    }
    
    current = server_names.get(server, "–ù–µ –≤—ã–±—Ä–∞–Ω")
    
    await query.edit_message_text(
        f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä:\n\n"
        f"–¢–µ–∫—É—â–∏–π: {current}\n\n"
        f"üéØ **–°–µ—Ä–≤–µ—Ä 1 (–†–æ—Å—Å–∏—è)** - —Ä–∞–±–æ—Ç–∞–µ—Ç TikTok\n"
        f"‚ö° **–°–µ—Ä–≤–µ—Ä 2 (–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã)** - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å",
        parse_mode='Markdown',
        reply_markup=get_server_selection_keyboard()
    )

async def select_server_callback(update: Update, context: ContextTypes.DEFAULT_TYPE, db):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    server = int(query.data.split('_')[-1])  # select_server_1 -> 1
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª
    _, current_protocol = db.get_user_preferences(user_id)
    
    # V2Ray –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ 1
    if server == 2 and current_protocol == 'v2ray':
        current_protocol = 'wireguard'
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä
    db.set_user_preferences(user_id, server, current_protocol)
    
    server_names = {
        1: "üéØ –°–µ—Ä–≤–µ—Ä 1 - TikTok (RU)",
        2: "‚ö° –°–µ—Ä–≤–µ—Ä 2 - –°–∫–æ—Ä–æ—Å—Ç—å (NL)"
    }
    
    await query.edit_message_text(
        f"‚úÖ –í—ã–±—Ä–∞–Ω: {server_names[server]}\n\n"
        f"–ü—Ä–æ—Ç–æ–∫–æ–ª: {current_protocol.upper()}",
        reply_markup=get_device_options_keyboard()
    )

async def choose_protocol_callback(update: Update, context: ContextTypes.DEFAULT_TYPE, db):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø—Ä–æ—Ç–æ–∫–æ–ª–∞"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    server, protocol = db.get_user_preferences(user_id)
    
    protocol_names = {
        'wireguard': 'üî∑ WireGuard',
        'v2ray': 'üî∂ V2Ray'
    }
    
    current = protocol_names.get(protocol, "–ù–µ –≤—ã–±—Ä–∞–Ω")
    
    await query.edit_message_text(
        f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ç–æ–∫–æ–ª:\n\n"
        f"–¢–µ–∫—É—â–∏–π: {current}\n\n"
        f"üî∑ **WireGuard** - –±—ã—Å—Ç—Ä—ã–π, —Å—Ç–∞–±–∏–ª—å–Ω—ã–π\n"
        f"üî∂ **V2Ray** - –æ–±—Ö–æ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ (—Ç–æ–ª—å–∫–æ –°–µ—Ä–≤–µ—Ä 1)",
        parse_mode='Markdown',
        reply_markup=get_protocol_selection_keyboard()
    )

async def select_protocol_callback(update: Update, context: ContextTypes.DEFAULT_TYPE, db):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±–æ—Ä –ø—Ä–æ—Ç–æ–∫–æ–ª–∞"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    protocol = query.data.split('_')[-1]  # select_protocol_wireguard -> wireguard
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–µ—Ä–≤–µ—Ä
    current_server, _ = db.get_user_preferences(user_id)
    
    # V2Ray –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ 1
    if protocol == 'v2ray' and current_server != 1:
        await query.answer("‚ö†Ô∏è V2Ray –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ –°–µ—Ä–≤–µ—Ä–µ 1!", show_alert=True)
        current_server = 1
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä
    db.set_user_preferences(user_id, current_server, protocol)
    
    protocol_names = {
        'wireguard': 'üî∑ WireGuard',
        'v2ray': 'üî∂ V2Ray'
    }
    
    await query.edit_message_text(
        f"‚úÖ –í—ã–±—Ä–∞–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª: {protocol_names[protocol]}\n\n"
        f"–°–µ—Ä–≤–µ—Ä: {'üéØ TikTok (RU)' if current_server == 1 else '‚ö° –°–∫–æ—Ä–æ—Å—Ç—å (NL)'}",
        reply_markup=get_device_options_keyboard()
    )